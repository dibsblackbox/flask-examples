def api_request(
        url: str,
        request_method: str = "GET",
        content_type: str = "application/json",
        data: str = None,
        path_variables: List[str] = None,
        query_params: dict = None,
        request_headers: dict = None,
        service: str = None,
        name: str = None,
        tenant_id: str = None
) -> Tuple[int, dict]:
    """
    Send a request to an API endpoint.

    Args:
        url (str): The API endpoint URL. Supports service discovery for URL lookup.
        request_method (str, optional): The HTTP request method. Defaults to "GET".
        content_type (str, optional): The content type of the request body. Defaults to "application/json".
        data (str, optional): The request body data. Defaults to None.
        path_variables (List[str], optional): The path variables for the URL. Defaults to None.
        query_params (dict, optional): The query parameters for the URL. Defaults to None.
        request_headers (dict, optional): The request headers. Defaults to None.
        service (str, optional): The name of the service to call. Only used if the service class is 'api-service'. Defaults to None.
        name (str, optional): The name of the API to call. Only used if the service class is 'api-service'. Defaults to None.
        tenant_id (str, optional): The tenant ID to use for the API call. Only used if the service class is 'api-service'. Defaults to None.

    Returns:
        Tuple[int, dict]: A tuple containing the HTTP status code and the response body as a dictionary.
    """

    # Determine the full URL based on service discovery and path variables
    full_url = url
    if service and name:
        from d
